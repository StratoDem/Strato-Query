% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/params.R
\name{api_query_params}
\alias{api_query_params}
\title{This function structures an API query to submit to the StratoDem Analytics API}
\usage{
api_query_params(table, query_type = "COUNT", data_fields, data_filters,
  aggregations = list(), groupby = list(), order = list(),
  median_variable_name = NA, mean_variable_name = NA, join = NA,
  on = NA)
}
\arguments{
\item{table}{Table name}

\item{query_type}{Type of query - defaults to 'COUNT'}

\item{data_fields}{List of fields to return}

\item{data_filters}{List of filters for the query}

\item{aggregations}{List of aggregations for the query}

\item{groupby}{List of variables for GROUP BY}

\item{order}{List of variables to ORDER}
}
\value{
query parameters
}
\description{
This function structures an API query to submit to the StratoDem Analytics API
}
\examples{
# Returns 80+ population for Massachusetts and California from 2010 onward, sorted by year and state ID
api_query_params(
  table = 'populationforecast_state_annual_population_age',
  data_fields = api_fields(fields_list = list('year', 'geoid2', list(population = 'population_80_plus'))),
  data_filters = list(
    ge_filter(filter_variable = 'age_g', filter_value = 17),
    in_filter(filter_variable = 'geoid2', filter_value = c(6, 25)),
    ge_filter(filter_variable = 'year', filter_value = 2010)),
  aggregations = list(sum_aggregation(variable_name = 'population')),
  groupby = c('year', 'geoid2'),
  order = c('year', 'geoid2'))
}
\keyword{query}
